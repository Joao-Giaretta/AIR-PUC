DROP SEQUENCE SEQ_PAGAMENTOS;
DROP TABLE PAGAMENTOS;

DROP SEQUENCE SEQ_ASSENTOS;
DROP TABLE ASSENTOS;

DROP SEQUENCE SEQ_VOOS;
DROP TABLE VOOS;

DROP SEQUENCE SEQ_TRECHOS;
DROP TABLE TRECHOS;

DROP SEQUENCE SEQ_AERONAVES;
DROP TABLE AERONAVES;

DROP SEQUENCE SEQ_AEROPORTOS;
DROP TABLE AEROPORTOS;

DROP SEQUENCE SEQ_CIDADES;
DROP TABLE CIDADES;

CREATE TABLE CIDADES(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR2(500) NOT NULL,
    UF VARCHAR2(2) NOT NULL,
    PAIS VARCHAR(500) NOT NULL
);

CREATE SEQUENCE SEQ_CIDADES START WITH 1 INCREMENT BY 1;

CREATE TABLE AEROPORTOS(
    CODIGO INTEGER NOT NULL PRIMARY KEY, 
    NOME VARCHAR2(500) NOT NULL,
    SIGLA VARCHAR2(10) NOT NULL,
    CIDADE INTEGER NOT NULL,
    -- CRIANDO UMA CONSTRAINT PARA DIZER QUE O CAMPO
    -- SIGLA Ã‰ ÃšNICO, O QUE SIGNIFICA QUE NÃƒO PODEMOS
    -- TER DOIS AEROPORTOS CADASTRADOS COM A MESMA SIGLA.
    CONSTRAINT UN_SIGLA UNIQUE(SIGLA),
    CONSTRAINT FK_AEROPORTO_CIDADE FOREIGN KEY (CIDADE) 
    REFERENCES CIDADES(CODIGO)
);

CREATE SEQUENCE SEQ_AEROPORTOS START WITH 1 INCREMENT BY 1;


CREATE TABLE AERONAVES(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    FABRICANTE VARCHAR2(100) NOT NULL,
    MODELO VARCHAR2(100) NOT NULL,
    ANO_FABRICACAO INTEGER NOT NULL,
    TOTAL_ASSENTOS INTEGER NOT NULL,
    REFERENCIA VARCHAR2(10) NOT NULL,
    
    -- ADICIONANDO ALGUMAS REGRAS INTERESSANTES
    -- RESTRINGINDO OS FABRICANTES EM 3:
    CONSTRAINT CK_FABRICANTE_VALIDO CHECK 
        (FABRICANTE IN ('Airbus', 'Boeing', 'Embraer')),
        
    -- ESSA REGRA SÃ“ PERMITE O CADASTRO DE AERONAVES A PARTIR
    -- DO ANO 1990 ATÃ‰ 2023.
    CONSTRAINT CK_ANO_VALIDO CHECK 
        (ANO_FABRICACAO BETWEEN 1990 AND 2023),

    -- IMPOSSIBILITANDO CADASTRAR MENOS DE 150 ASSENTOS E MAIS DE 1000.
    CONSTRAINT CK_TOTAL_ASSENTOS CHECK
        (TOTAL_ASSENTOS BETWEEN 100 AND 1000),
    
    -- UNIQUE PARA O NUMERO DE REFERENCIA.
    CONSTRAINT UN_REFERENCIA UNIQUE (REFERENCIA)
);

CREATE SEQUENCE SEQ_AERONAVES START WITH 1 INCREMENT BY 1;

-- ESTA Ã‰ A TABELA QUE ARMAZENARÃ? O NOME DO TRECHO, 
-- AEROPORTO DE ORIGEM E DESTINO.
-- NOTE QUE INCRÃ?VEL A RESTRIÃ‡ÃƒO DE IMPEDIR QUE A ORIGEM E 
-- DESTINO SEJAM IGUAIS. 
-- UMA COISA MUITO INTERESSANTE: TABELA SE CHAVE PRIMÃ?RIA.


CREATE TABLE TRECHOS(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR2(200) NOT NULL,
    ORIGEM INTEGER NOT NULL,
    DESTINO INTEGER NOT NULL,
    AERONAVE INTEGER NOT NULL,
    
    -- PRIMEIRA CONSTRAINT - IMPEDIR QUE ORIGEM E DESTINO SEJAM IGUAIS
    -- AFINAL UM TRECHO NÃƒO PODE TER A ORIGEM E DESTINO O MESMO AEROPORTO
    CONSTRAINT CK_ORIGEM_DESTINO_DIFERENTES CHECK (ORIGEM != DESTINO),
    
    -- CHAVE ESTRANGEIRA PARA O AEROPORTO DE ORIGEM.
    CONSTRAINT FK_ORIGEM_AEROPORTO FOREIGN KEY (ORIGEM) 
    REFERENCES AEROPORTOS(CODIGO),
    
    -- CHAVE ESTRANGEIRA PARA O AEROPORTO DE DESTINO.
    CONSTRAINT FK_DESTINO_AEROPORTO FOREIGN KEY (DESTINO)
    REFERENCES AEROPORTOS(CODIGO),
    
    -- CHAVE ESTRANGEIRA DE AERONAVE
    CONSTRAINT FK_AERONAVE FOREIGN KEY(AERONAVE)
    REFERENCES AERONAVES(CODIGO)
);

CREATE SEQUENCE SEQ_TRECHOS START WITH 1 INCREMENT BY 1;

CREATE TABLE VOOS(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    DATA_VOO DATE NOT NULL,
    HR_CHEGADA DATE NOT NULL,
    HR_SAIDA DATE NOT NULL,
    VALOR NUMBER NOT NULL,
    TRECHO INTEGER NOT NULL,

    CONSTRAINT FK_TRECHO FOREIGN KEY(TRECHO)
    REFERENCES TRECHOS(CODIGO)
);


CREATE TABLE ASSENTOS(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    NUMERO INTEGER NOT NULL,
    OCUPADO CHAR(1) DEFAULT '0',
    VOO INTEGER NOT NULL,
    
    CONSTRAINT CK_OCUPADO_1_OU_0 CHECK (OCUPADO IN ('1', '0')),
    CONSTRAINT FK_ASSENTO_VOO FOREIGN KEY(VOO)
    REFERENCES VOOS(CODIGO)
);

CREATE SEQUENCE SEQ_ASSENTOS START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TGR_ASSENTOS
AFTER INSERT ON VOOS
FOR EACH ROW
BEGIN
  FOR i IN 1..120 LOOP
    INSERT INTO ASSENTOS (CODIGO, NUMERO, VOO)
    VALUES (SEQ_ASSENTOS.NEXTVAL, i, :NEW.CODIGO);
  END LOOP;
END;

CREATE TABLE PASSAGENS(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR2(500) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL,
    VOO INTEGER NOT NULL,
    ASSENTO INTEGER NOT NULL,
    DATA DATE DEFAULT SYSDATE,
    
    CONSTRAINT FK_PASSAGEM_VOO FOREIGN KEY(VOO)
    REFERENCES VOOS(CODIGO),
    CONSTRAINT FK_PASSAGEM_ASSENTO FOREIGN KEY(ASSENTO)
    REFERENCES ASSENTOS(CODIGO)
);

CREATE SEQUENCE SEQ_PASSAGENS START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TGR_DELETE_PASSAGEM_ASSENTOS
BEFORE DELETE ON VOOS
FOR EACH ROW
BEGIN
    DELETE FROM PASSAGENS WHERE VOO = :OLD.CODIGO;
    DELETE FROM ASSENTOS WHERE VOO = :OLD.CODIGO;
END;

